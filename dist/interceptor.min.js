!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.interceptor=t():e.interceptor=t()}(window,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}r.r(t),r.d(t,"Interceptor",(function(){return i}));var o=function(){function e(){n(this,"_handlers",[])}var t=e.prototype;return t.add=function(e,t){return this._handlers.push({resolved:e,rejected:t}),this._handlers.length-1},t.remove=function(e){this._handlers[e]&&(this._handlers[e]=void 0)},e}(),i=function(){function e(){n(this,"interceptors",{before:new o,after:new o})}var t=e.prototype;return t.handle=function(e){return Promise.resolve(e)},t.invoke=function(e){for(var t=[].concat(this.interceptors.before._handlers,[{resolved:this.handle,rejected:null}],this.interceptors.after._handlers),r=Promise.resolve(e);t.length>0;){var n=t.shift();n&&(r=r.then(n.resolved,n.rejected))}return r},e}();t.default=i}])}));
//# sourceMappingURL=interceptor.min.map